"""
utils/invoice_keyboard.py

–ì–µ–Ω–µ—Ä–∞—Ü–∏—è InlineKeyboardMarkup –¥–ª—è –Ω–∞–∫–ª–∞–¥–Ω–æ–π.
"""

from typing import Dict, List
from telegram import InlineKeyboardButton, InlineKeyboardMarkup


def build_invoice_keyboard(invoice: Dict) -> InlineKeyboardMarkup:
    """
    –°–æ–∑–¥–∞—ë—Ç –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –¥–ª—è –Ω–∞–∫–ª–∞–¥–Ω–æ–π —Å —É—á—ë—Ç–æ–º —Å—Ç–∞—Ç—É—Å–æ–≤.

    Args:
        invoice: —Å–ª–æ–≤–∞—Ä—å —Å –¥–∞–Ω–Ω—ã–º–∏ –Ω–∞–∫–ª–∞–¥–Ω–æ–π (—É–Ω–∏—Ñ–∏—Ü–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç)

    Returns:
        InlineKeyboardMarkup: –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –¥–ª—è Telegram
    """
    keyboard: List[List[InlineKeyboardButton]] = []

    # –ö–Ω–æ–ø–∫–∞ –≤—ã–±–æ—Ä–∞ –ø–æ—Å—Ç–∞–≤—â–∏–∫–∞, –µ—Å–ª–∏ –Ω–µ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥—ë–Ω
    if not invoice.get("supplier_ok"):
        keyboard.append([
            InlineKeyboardButton("üñäÔ∏è Select supplier", callback_data="select_supplier")
        ])

    # –ö–Ω–æ–ø–∫–∞ –≤–≤–æ–¥–∞ –ø–æ–∫—É–ø–∞—Ç–µ–ª—è, –µ—Å–ª–∏ –Ω–µ –∑–∞–¥–∞–Ω
    if not invoice.get("buyer"):
        keyboard.append([
            InlineKeyboardButton("üñäÔ∏è Set buyer", callback_data="set_buyer")
        ])

    # –ö–Ω–æ–ø–∫–∏ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –¥–ª—è unmatched –∏–ª–∏ –Ω–µ–≤–∞–ª–∏–¥–Ω—ã—Ö –ø–æ–∑–∏—Ü–∏–π
    unmatched_items = [
        (idx, item) for idx, item in enumerate(invoice.get("items", []))
        if item.get("match_status") != "matched" or not item.get("is_valid", True)
    ]

    fix_buttons: List[InlineKeyboardButton] = []
    for idx, _ in unmatched_items:
        fix_buttons.append(
            InlineKeyboardButton(f"Fix_{idx + 1}", callback_data=f"fix_item_{idx}")
        )
        # –ì—Ä—É–ø–ø–∏—Ä—É–µ–º –ø–æ 3 –∫–Ω–æ–ø–∫–∏ –≤ —Ä—è–¥
        if len(fix_buttons) == 3:
            keyboard.append(fix_buttons)
            fix_buttons = []
    if fix_buttons:
        keyboard.append(fix_buttons)

    # –ö–Ω–æ–ø–∫–∞ –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è, –µ—Å–ª–∏ –≤—Å—ë –≤ –ø–æ—Ä—è–¥–∫–µ
    if invoice.get("unmatched_count", 0) == 0 and invoice.get("supplier_ok") and invoice.get("buyer"):
        keyboard.append([
            InlineKeyboardButton("‚úÖ Confirm & send to Syrve", callback_data="send_to_syrve")
        ])

    return InlineKeyboardMarkup(keyboard)
