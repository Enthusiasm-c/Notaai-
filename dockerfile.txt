# syntax=docker/dockerfile:1

# Стадия 1: Builder
FROM python:3.11-slim AS builder

WORKDIR /app

# Установка зависимостей для сборки
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Копирование файлов зависимостей
COPY requirements.txt .

# Создание виртуального окружения и установка зависимостей
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

RUN pip install --no-cache-dir --upgrade pip && \
    pip install --no-cache-dir -r requirements.txt

# Стадия 2: Runtime
FROM python:3.11-slim

WORKDIR /app

# Установка runtime зависимостей (curl для healthcheck)
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl \
    && rm -rf /var/lib/apt/lists/*

# Копирование виртуального окружения из builder
COPY --from=builder /opt/venv /opt/venv

# Настройка PATH для использования виртуального окружения
ENV PATH="/opt/venv/bin:$PATH"

# Создание непривилегированного пользователя
RUN useradd -m -u 1000 notaai
USER notaai

# Копирование кода приложения
COPY --chown=notaai:notaai ./ /app

# Экспорт порта для endpoint проверки работоспособности
ENV PORT=8080
EXPOSE 8080

# Настройка Python для работы в небуферизованном режиме
ENV PYTHONUNBUFFERED=1

# Установка команды по умолчанию
CMD ["python", "main.py"]